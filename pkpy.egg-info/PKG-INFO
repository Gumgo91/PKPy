Metadata-Version: 2.1
Name: PKPy
Version: 0.1.0
Summary: Simple and Fast pharmacokinetic modeling package in Python
Home-page: https://github.com/antibody91/pkpy
Author: Hyunseung Kong
Author-email: hskong@snu.ac.kr
Keywords: pharmacokinetics,modeling,simulation,clinical-trials
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Healthcare Industry
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: numpy>=1.20.0
Requires-Dist: pandas>=1.3.0
Requires-Dist: scipy>=1.7.0
Requires-Dist: numba>=0.54.0
Requires-Dist: matplotlib>=3.4.0
Requires-Dist: seaborn>=0.11.0
Requires-Dist: scikit-learn>=0.24.0

# PKPy: A Python-Based Framework for Automated Population Pharmacokinetic Analysis

PKPy is an open-source Python framework designed to streamline population pharmacokinetic analysis and modeling. The framework combines user accessibility with computational performance to provide an efficient platform for PK/PD modeling.

## Key Features

- Multiple compartment models (1-compartment, 2-compartment, absorption models)
- Automated non-compartmental analysis (NCA)
- Covariate effect analysis
- Visual predictive checks (VPC)
- Diagnostic plot generation
- Simulation engine
- Parameter estimation
- Robust error handling

## Installation

To install PKPy, you can use pip:


## Core Modules

- `models.py`: PK model definitions
- `workflow.py`: Analysis workflow management
- `covariate_analysis.py`: Covariate analysis tools
- `simulation.py`: Simulation engine
- `fitting.py`: Parameter estimation
- `utils.py`: Utility functions

## Features in Detail

### Compartment Models
- One-compartment model
- One-compartment model with absorption
- Two-compartment model
- Custom model support

### Non-Compartmental Analysis
- AUC calculation
- Terminal half-life estimation
- Clearance and volume estimation
- Multiple NCA metrics
- Robust error handling

### Covariate Analysis
- Automated covariate screening
- Multiple relationship types (linear, power, exponential)
- Forward selection algorithm
- Statistical significance testing
- Diagnostic plots

### Simulation Capabilities
- Virtual population generation
- Parameter variability
- Covariate effects
- Residual error models
- Trial design optimization

## Requirements

- Python ≥ 3.8
- NumPy ≥ 1.20.0
- SciPy ≥ 1.7.0
- Pandas ≥ 1.3.0
- Matplotlib ≥ 3.4.0
- Seaborn ≥ 0.11.0
- Scikit-learn ≥ 0.24.0
- Numba ≥ 0.54.0

## Contact

- Email: hskong@snu.ac.kr
- Issue Tracker: https://github.com/gumgo91/PKPy/issues
